[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 14.0.1)
[debug]       Load.loadUnit: plugins took 74.429ms
[debug]       Load.loadUnit: defsScala took 0.1968ms
[debug] [Loading] Scanning directory C:\Users\clown\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\clown\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.3501 ms
[debug]           Load.resolveProject(global-plugins) took 29.2111ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\clown\.sbt\1.0\plugins, plugins: List(<none>))) took 55.6692ms
[debug] [Loading] Done in C:\Users\clown\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 72.2144ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1583ms
[debug]     Load.loadUnit(file:/C:/Users/clown/.sbt/1.0/plugins/, ...) took 152.9095ms
[debug]   Load.apply: load took 277.4035ms
[debug]   Load.apply: resolveProjects took 4.0657ms
[debug]   Load.apply: finalTransforms took 47.085ms
[debug]   Load.apply: config.delegates took 6.0277ms
[debug]   Load.apply: Def.make(settings)... took 249.5684ms
[debug]   Load.apply: structureIndex took 59.3062ms
[debug]   Load.apply: mkStreams took 1.0ms
[info] loading global plugins from C:\Users\clown\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1596.3105ms
[debug]           Load.loadUnit: plugins took 30.8238ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory E:\code\ScalaContest\project
[debug]             Load.loadUnit: mkEval took 3.6301ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\code\ScalaContest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5826 ms
[info] loading settings for project scalacontest-build from plugins.sbt ...
[debug]               Load.resolveProject(scalacontest-build) took 1.7846ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalacontest-build, base: E:\code\ScalaContest\project, plugins: List(<none>))) took 3.7764ms
[debug] [Loading] Done in E:\code\ScalaContest\project, returning: (scalacontest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 84.4759ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.1859ms
[debug]         Load.loadUnit(file:/E:/code/ScalaContest/project/, ...) took 119.1423ms
[debug]       Load.apply: load took 120.0755ms
[debug]       Load.apply: resolveProjects took 0.0745ms
[debug]       Load.apply: finalTransforms took 10.6864ms
[debug]       Load.apply: config.delegates took 0.2305ms
[debug]       Load.apply: Def.make(settings)... took 65.6554ms
[debug]       Load.apply: structureIndex took 21.6452ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from E:\code\ScalaContest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 369.0522ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory E:\code\ScalaContest
[debug]       Load.loadUnit: mkEval took 0.1434ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\code\ScalaContest, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9841 ms
[info] loading settings for project scalacontest from build.sbt ...
[debug]         Load.resolveProject(scalacontest) took 0.7798ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalacontest, base: E:\code\ScalaContest, plugins: List(<none>))) took 2.038ms
[debug] [Loading] Done in E:\code\ScalaContest, returning: (scalacontest)
[debug]     Load.loadUnit: loadedProjectsRaw took 33.0627ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.5441ms
[debug]   Load.loadUnit(file:/E:/code/ScalaContest/, ...) took 406.2258ms
[debug] Load.apply: load took 407.1487ms
[debug] Load.apply: resolveProjects took 0.0624ms
[debug] Load.apply: finalTransforms took 4.4502ms
[debug] Load.apply: config.delegates took 0.2335ms
[debug] Load.apply: Def.make(settings)... took 39.9804ms
[debug] Load.apply: structureIndex took 15.6368ms
[debug] Load.apply: mkStreams took 0.0016ms
[info] set current project to ScalaContest (in build file:/E:/code/ScalaContest/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * scalacontest / idePackagePrefix
[warn]   +- E:\code\ScalaContest\build.sbt:7
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(~run, None, None)
[info] sbt server started at local:sbt-server-dd5cd304995936d96c2b
[debug] Writing bsp connection file
[info] started sbt server
[debug] > Exec(__runWatch console0, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(__preWatch console0, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to E:\code\ScalaContest\target\scala-2.11\classes ...
[error] E:\code\ScalaContest\src\main\scala\Main.scala:11:8: value findLast is not a member of Array[Int]
[error]     ar.findLast(x => x == min)
[error]        ^
[error] one error found
[error] (Compile / compileIncremental) Compilation failed
[error] Total time: 2 s, completed Sep 7, 2021, 2:31:19 AM
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(__postWatch console0, None, None)
[debug] > Exec(__waitWatch console0, None, None)
