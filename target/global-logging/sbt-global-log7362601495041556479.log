[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\clown\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\clown\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 14.0.1)
[debug]       Load.loadUnit: plugins took 63.7336ms
[debug]       Load.loadUnit: defsScala took 0.2042ms
[debug] [Loading] Scanning directory C:\Users\clown\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\clown\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.3111 ms
[debug]           Load.resolveProject(global-plugins) took 43.794ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\clown\.sbt\1.0\plugins, plugins: List(<none>))) took 71.2407ms
[debug] [Loading] Done in C:\Users\clown\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 86.4281ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1854ms
[debug]     Load.loadUnit(file:/C:/Users/clown/.sbt/1.0/plugins/, ...) took 156.7726ms
[debug]   Load.apply: load took 289.7073ms
[debug]   Load.apply: resolveProjects took 4.6827ms
[debug]   Load.apply: finalTransforms took 43.8179ms
[debug]   Load.apply: config.delegates took 6.8448ms
[debug]   Load.apply: Def.make(settings)... took 263.9968ms
[debug]   Load.apply: structureIndex took 63.6967ms
[debug]   Load.apply: mkStreams took 0.9629ms
[info] loading global plugins from C:\Users\clown\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1870.5681ms
[debug]                       Load.loadUnit: plugins took 21.9385ms
[debug]                       Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory E:\code\ScalaContest\project\project\project
[debug]                         Load.loadUnit: mkEval took 4.4443ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\code\ScalaContest\project\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3875 ms
[info] loading settings for project scalacontest-build-build-build from metals.sbt ...
[debug]                           Load.resolveProject(scalacontest-build-build-build) took 4.8369ms
[debug]                         Load.loadTransitive: finalizeProject(Project(id scalacontest-build-build-build, base: E:\code\ScalaContest\project\project\project, plugins: List(<none>))) took 6.6255ms
[debug] [Loading] Done in E:\code\ScalaContest\project\project\project, returning: (scalacontest-build-build-build)
[debug]                       Load.loadUnit: loadedProjectsRaw took 94.626ms
[debug]                       Load.loadUnit: cleanEvalClasses took 3.769ms
[debug]                     Load.loadUnit(file:/E:/code/ScalaContest/project/project/project/, ...) took 121.1105ms
[debug]                   Load.apply: load took 122.0563ms
[debug]                   Load.apply: resolveProjects took 0.0644ms
[debug]                   Load.apply: finalTransforms took 7.041ms
[debug]                   Load.apply: config.delegates took 0.2681ms
[debug]                   Load.apply: Def.make(settings)... took 71.5327ms
[debug]                   Load.apply: structureIndex took 22.7397ms
[debug]                   Load.apply: mkStreams took 0.0016ms
[info] loading project definition from E:\code\ScalaContest\project\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                 Load.loadUnit: plugins took 496.8753ms
[debug]                 Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory E:\code\ScalaContest\project\project
[debug]                   Load.loadUnit: mkEval took 0.1618ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\code\ScalaContest\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5618 ms
[info] loading settings for project scalacontest-build-build from metals.sbt ...
[debug]                     Load.resolveProject(scalacontest-build-build) took 23.2552ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id scalacontest-build-build, base: E:\code\ScalaContest\project\project, plugins: List(<none>))) took 25.2245ms
[debug] [Loading] Done in E:\code\ScalaContest\project\project, returning: (scalacontest-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 37.8295ms
[debug]                 Load.loadUnit: cleanEvalClasses took 1.9917ms
[debug]               Load.loadUnit(file:/E:/code/ScalaContest/project/project/, ...) took 537.3416ms
[debug]             Load.apply: load took 538.2143ms
[debug]             Load.apply: resolveProjects took 0.0679ms
[debug]             Load.apply: finalTransforms took 10.6545ms
[debug]             Load.apply: config.delegates took 0.4095ms
[debug]             Load.apply: Def.make(settings)... took 64.2871ms
[debug]             Load.apply: structureIndex took 19.0887ms
[debug]             Load.apply: mkStreams took 0.0019ms
[info] loading project definition from E:\code\ScalaContest\project\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@cae2a97, check cycles: false, forcegc: true
[success] Generated .bloop\scalacontest-build-build.json
[success] Total time: 1 s, completed Sep 17, 2021, 4:31:10 AM
[debug] Running task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@51e94b7d, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 1470.9139ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory E:\code\ScalaContest\project
[debug]             Load.loadUnit: mkEval took 0.1405ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\code\ScalaContest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5763 ms
[info] loading settings for project scalacontest-build from metals.sbt,plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(scalacontest-build) took 38.9344ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalacontest-build, base: E:\code\ScalaContest\project, plugins: List(<none>))) took 42.3808ms
[debug] [Loading] Done in E:\code\ScalaContest\project, returning: (scalacontest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2184.9692ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5738ms
[debug]         Load.loadUnit(file:/E:/code/ScalaContest/project/, ...) took 3662.5192ms
[debug]       Load.apply: load took 3663.4547ms
[debug]       Load.apply: resolveProjects took 0.0927ms
[debug]       Load.apply: finalTransforms took 13.4611ms
[debug]       Load.apply: config.delegates took 0.1798ms
[debug]       Load.apply: Def.make(settings)... took 90.093ms
[debug]       Load.apply: structureIndex took 20.398ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from E:\code\ScalaContest\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@4110ffe5, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[success] Generated .bloop\scalacontest-build.json
[success] Total time: 5 s, completed Sep 17, 2021, 4:31:17 AM
[debug] Running task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@d0538b3, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8719.5824ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory E:\code\ScalaContest
[debug]       Load.loadUnit: mkEval took 0.133ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\code\ScalaContest, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2923 ms
[info] loading settings for project scalacontest from build.sbt ...
[debug]         Load.resolveProject(scalacontest) took 45.9333ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalacontest, base: E:\code\ScalaContest, plugins: List(<none>))) took 47.9045ms
[debug] [Loading] Done in E:\code\ScalaContest, returning: (scalacontest)
[debug]     Load.loadUnit: loadedProjectsRaw took 653.9834ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7015ms
[debug]   Load.loadUnit(file:/E:/code/ScalaContest/, ...) took 9382.7143ms
[debug] Load.apply: load took 9383.6169ms
[debug] Load.apply: resolveProjects took 0.065ms
[debug] Load.apply: finalTransforms took 13.157ms
[debug] Load.apply: config.delegates took 0.5658ms
[debug] Load.apply: Def.make(settings)... took 49.1127ms
[debug] Load.apply: structureIndex took 14.2334ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to ScalaContest (in build file:/E:/code/ScalaContest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61261 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61261, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaContest (in build file:/E:/code/ScalaContest/)
[debug] > Exec(idea-shell, None, None)
